"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8569],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var x=n.createContext({}),p=function(e){var t=n.useContext(x),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(x.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,x=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),s=l,k=u["".concat(x,".").concat(s)]||u[s]||m[s]||r;return a?n.createElement(k,i(i({ref:t},d),{},{components:a})):n.createElement(k,i({ref:t},d))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=s;var o={};for(var x in t)hasOwnProperty.call(t,x)&&(o[x]=t[x]);o.originalType=e,o[u]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},2261:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>v,contentTitle:()=>P,default:()=>L,frontMatter:()=>T,metadata:()=>_,toc:()=>S});var n=a(7462),l=a(7294),r=a(3905),i=a(4334),o=a(2466),x=a(6550),p=a(1980),d=a(7392),u=a(12);function m(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:l}}=e;return{value:t,label:a,attributes:n,default:l}}))}function s(e){const{values:t,children:a}=e;return(0,l.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function k(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function N(e){let{queryString:t=!1,groupId:a}=e;const n=(0,x.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,p._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function c(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,r=s(e),[i,o]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!k({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[x,p]=N({queryString:a,groupId:n}),[d,m]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,u.Nk)(a);return[n,(0,l.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:n}),c=(()=>{const e=x??d;return k({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{c&&o(c)}),[c]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!k({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),m(e)}),[p,m,r]),tabValues:r}}var h=a(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:a,selectedValue:r,selectValue:x,tabValues:p}=e;const d=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),m=e=>{const t=e.currentTarget,a=d.indexOf(t),n=p[a].value;n!==r&&(u(t),x(n))},s=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:o}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>d.push(e),onKeyDown:s,onClick:m},o,{className:(0,i.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":r===t})}),a??t)})))}function b(e){let{lazy:t,children:a,selectedValue:n}=e;const r=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function C(e){const t=c(e);return l.createElement("div",{className:(0,i.Z)("tabs-container",g.tabList)},l.createElement(f,(0,n.Z)({},e,t)),l.createElement(b,(0,n.Z)({},e,t)))}function E(e){const t=(0,h.Z)();return l.createElement(C,(0,n.Z)({key:String(t)},e))}const D={tabItem:"tabItem_Ymn6"};function y(e){let{children:t,hidden:a,className:n}=e;return l.createElement("div",{role:"tabpanel",className:(0,i.Z)(D.tabItem,n),hidden:a},t)}const T={title:"Firmware Development",pagination_next:null,pagination_prev:null},P="Firmware Development",_={unversionedId:"development/firmware-development",id:"development/firmware-development",title:"Firmware Development",description:"GP2040-CE is written in C++ and set up as a standard Pico SDK project.",source:"@site/docs/development/firmware-development.mdx",sourceDirName:"development",slug:"/development/firmware-development",permalink:"/docusaurus-test/development/firmware-development",draft:!1,tags:[],version:"current",frontMatter:{title:"Firmware Development",pagination_next:null,pagination_prev:null},sidebar:"contributeSidebar"},v={},S=[{value:"Environment Setup",id:"environment-setup",level:2},{value:"Ubuntu",id:"ubuntu",level:4},{value:"Raspberry Pi",id:"raspberry-pi",level:4},{value:"Building",id:"building",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"SDK Variables",id:"sdk-variables",level:4},{value:"Configuration",id:"configuration",level:2},{value:"Board Configuration Folder",id:"board-configuration-folder",level:3},{value:"Board Configuration (<code>BoardConfig.h</code>)",id:"board-configuration-boardconfigh",level:3},{value:"RGB LEDs",id:"rgb-leds",level:4},{value:"Player LEDs",id:"player-leds",level:4},{value:"I2C Displays",id:"i2c-displays",level:4},{value:"I2C Display Splash",id:"i2c-display-splash",level:4}],w={toc:S},I="wrapper";function L(e){let{components:t,...a}=e;return(0,r.kt)(I,(0,n.Z)({},w,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"firmware-development"},"Firmware Development"),(0,r.kt)("p",null,"GP2040-CE is written in C++ and set up as a standard Pico SDK project.\nSee ",(0,r.kt)("a",{parentName:"p",href:"https://rptl.io/pico-get-started"},"Getting Started with the Raspberry Pi Pico"),"."),(0,r.kt)("h2",{id:"environment-setup"},"Environment Setup"),(0,r.kt)("p",null,"Most of this will be parroting the above linked PDF from the Raspberry Pi Foundation."),(0,r.kt)("p",null,"For GP2040-CE development on the Windows platform using the Pico SDK Installer, please skip ahead to the 'Windows Setup (Pico SDK Installer)' section on this page."),(0,r.kt)(E,{groupId:"operating-systems",defaultValue:"Windows (Pico SDK)",mdxType:"Tabs"},(0,r.kt)(y,{value:"Windows (Pico SDK)",label:"Windows (Pico SDK)",default:!0,mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download and install CMake from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Kitware/CMake/releases/download/v3.27.4/cmake-3.27.4-windows-x86_64.msi"},"CMake Website"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download and install ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/raspberrypi/pico-setup-windows/releases/"},"pico-setup-windows-x64-standalone"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download and install VSCode.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download and install ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/terminal/releases/tag/v1.17.11461.0"},"Windows Terminal"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open Windows Terminal.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download the GP2040-CE-main repository by running the following commands in the Windows Terminal. This will download the folder to ",(0,r.kt)("inlineCode",{parentName:"p"},"C:\\Users\\user\\GP2040-CE"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/OpenStickCommunity/GP2040-CE.git\ncd GP2040-CE\ngit submodule update --init\n")),(0,r.kt)("p",{parentName:"li"},'After installing the Raspberry Pi Pico SDK, you should now have a shortcut to "Pico-Visual Studio Code" (search for it using Windows Search).')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Open "Pico-Visual Studio Code" via Windows search. This is a shortcut with pre-configured environment variables (this will be explained later).')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to the Extensions window by pressing ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl+Shift+X"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Install "CMake Tools" by Microsoft.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Open the GP2040-CE folder you downloaded earlier via "File > Open Folder."')))),(0,r.kt)(y,{value:"Windows (Manual)",label:"Windows (Manual)",default:!0,mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the latest ARM GNU Toolchain"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads"},"Arm GNU Toolchain")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install latest version of CMake"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://cmake.org/download/"},"CMake")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install Visual Studio Build tools, or the full Visual Studio IDE"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Make sure to select the Desktop development with C++ workload"),(0,r.kt)("li",{parentName:"ul"},"Select the latest Windows 10 or Windows 11 SDK from the Individual Components"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2022"},"Visual Studio Build tools")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://visualstudio.microsoft.com/downloads/#visual-studio-community-2022"},"Visual Studio Community Edition")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install Python 3.10"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"At the end of the installation, there is an option to disable max file path length. You want to select this."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.python.org/downloads/windows/"},"Python")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install Visual Studio Code - Optional"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/"},"Visual Studio Code")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install git"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Set default editor to anything other than VIM, such as Visual Studio Code"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install NodeJS and NPM"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download"},"Download and install NodeJS")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone the Pico SDK to your local computer"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/raspberrypi/pico-sdk.git\ncd pico-sdk\ngit submodule update --init\ncd ..\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"From a command-prompt, Clone GP2040-CE to your local computer"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/OpenStickCommunity/GP2040-CE.git\ncd GP2040-CE\n"))))),(0,r.kt)(y,{value:"Linux",label:"Linux",default:!0,mdxType:"TabItem"},(0,r.kt)("h4",{id:"ubuntu"},"Ubuntu"),(0,r.kt)("p",null,"This setup assumes an understanding of Linux terminal usage."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get the SDK"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/\nmkdir pico\ncd pico\ngit clone https://github.com/raspberrypi/pico-sdk.git --branch master\ncd pico-sdk\ngit submodule update --init\ncd ..\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the toolchain"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\nsudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"May additionally need to install ",(0,r.kt)("inlineCode",{parentName:"li"},"libstdc++-arm-none-eabi-newlib")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install NodeJS and NPM"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - &&\\\nsudo apt-get install -y nodejs\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get GP2040-CE"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/OpenStickCommunity/GP2040-CE.git\ncd GP2040-CE\ngit submodule update --init\n")))),(0,r.kt)("h4",{id:"raspberry-pi"},"Raspberry Pi"),(0,r.kt)("p",null,"This setup script requires approximately 2.5GB of disk space on your SD card."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download the setup script"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://raw.githubusercontent.com/raspberrypi/pico-setup/master/pico_setup.sh\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make script executable and Run it."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x pico_setup.sh\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install NodeJS and NPM"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - &&\\\nsudo apt-get install -y nodejs\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Reboot your Pi"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo reboot\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Get GP2040-CE"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/OpenStickCommunity/GP2040-CE.git\ncd GP2040-CE\ngit submodule update --init\n")))))),(0,r.kt)("h2",{id:"building"},"Building"),(0,r.kt)("h3",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("p",null,"A number of new environment variables have been setup to control parts of the build flow."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GP2040_BOARDCONFIG"),(0,r.kt)("td",{parentName:"tr",align:null},"Pico"),(0,r.kt)("td",{parentName:"tr",align:null},"The boards.h config file to use for the build.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SKIP_WEBBUILD"),(0,r.kt)("td",{parentName:"tr",align:null},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether the web configurator is built during the cmake configuration step.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SKIP_SUBMODULES"),(0,r.kt)("td",{parentName:"tr",align:null},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines whether the submodule init command is run automatically during the cmake configuration step.")))),(0,r.kt)("h4",{id:"sdk-variables"},"SDK Variables"),(0,r.kt)("p",null,"There are a few SDK variables we take advantage of for our builds."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PICO_BOARD"),(0,r.kt)("td",{parentName:"tr",align:null},"pico"),(0,r.kt)("td",{parentName:"tr",align:null},"This is the embedded board that the RP2040 chip is part of. By default, it assumes the Pico. This variable would match the ",(0,r.kt)("inlineCode",{parentName:"td"},"<boardname.h>")," file in the board's configs folder.")))),(0,r.kt)(E,{groupId:"operating-systems",defaultValue:"Windows (Pico SDK)",mdxType:"Tabs"},(0,r.kt)(y,{value:"Windows (Pico SDK)",label:"Windows (Pico SDK)",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,'After installing the Raspberry Pi Pico SDK, you should now have a shortcut to "Pico-Visual Studio Code" (search for it using Windows Search). This shortcut should already have everything configured, ',(0,r.kt)("strong",{parentName:"p"},"allowing you to skip to step 7"),". If you're experiencing compilation issues, consider following the manual steps outlined here."),(0,r.kt)("p",null,"Ensure the ",(0,r.kt)("inlineCode",{parentName:"p"},"PICO_SDK_PATH")," environment variable is set:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'Search for "Edit environment variables for your account" in Windows.'),(0,r.kt)("li",{parentName:"ol"},'Under "User Variables," click "New...".'),(0,r.kt)("li",{parentName:"ol"},"In the dialog that appears, enter ",(0,r.kt)("inlineCode",{parentName:"li"},"PICO_SDK_PATH")," for the Variable Name."),(0,r.kt)("li",{parentName:"ol"},'Click "Browse Directory" and navigate to ',(0,r.kt)("inlineCode",{parentName:"li"},"C:\\Program Files\\Raspberry Pi\\Pico SDK v1.5.1\\pico-sdk")," for the Variable Value."),(0,r.kt)("li",{parentName:"ol"},"Create another new variable."),(0,r.kt)("li",{parentName:"ol"},"Enter ",(0,r.kt)("inlineCode",{parentName:"li"},"GP2040_BOARDCONFIG")," for the Variable Name."),(0,r.kt)("li",{parentName:"ol"},"Enter ",(0,r.kt)("inlineCode",{parentName:"li"},"Pico")," (or the name of your edited config folder) for the Variable Value.")),(0,r.kt)("p",null,"You can also set the variable within VSCode:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Press ",(0,r.kt)("inlineCode",{parentName:"li"},"Ctrl + ,")," to open the settings."),(0,r.kt)("li",{parentName:"ol"},'Use the search bar to find "CMake."'),(0,r.kt)("li",{parentName:"ol"},'Scroll until you see "CMake: Configure Environment."'),(0,r.kt)("li",{parentName:"ol"},'Click "Add Item."'),(0,r.kt)("li",{parentName:"ol"},"Key: ",(0,r.kt)("inlineCode",{parentName:"li"},"GP2040_BOARDCONFIG")),(0,r.kt)("li",{parentName:"ol"},"Value: ",(0,r.kt)("inlineCode",{parentName:"li"},"Pico")," (or your working folder name).")),(0,r.kt)("p",null,"When prompted, choose ",(0,r.kt)("inlineCode",{parentName:"p"},"GCC 10.3.1 ARM NONE EABI"),' for "Select a kit for GP2040-CE"'),(0,r.kt)("p",null,"From inside VSCode:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Click the CMake icon on the left sidebar of VSCode."),(0,r.kt)("li",{parentName:"ol"},'You\'ll see three icons at the top-right corner of the CMake project outline. Click the "Configure All Projects" icon (looks like a page with an arrow).'),(0,r.kt)("li",{parentName:"ol"},'Wait for the configuration process to complete. If progress isn\'t visible, open a new terminal in VSCode by clicking on the "Terminal" menu, then "New Terminal". A new terminal window will open at the bottom, navigate the "Output" tab.'),(0,r.kt)("li",{parentName:"ol"},'Click "Build All Projects" in the CMake project outline.'),(0,r.kt)("li",{parentName:"ol"},'The files should be in a new folder named "build" inside the GP2040-CE folder'))),(0,r.kt)(y,{value:"Windows (Manual)",label:"Windows (Manual)",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Start in the GP2040-CE folder. ",(0,r.kt)("strong",{parentName:"p"},"From a Developer Powershell or Developer Command Command Prompt"),":"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"A new Powershell or Command Prompt session will be required after setting an environment variable.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ensure you have the ",(0,r.kt)("inlineCode",{parentName:"p"},"PICO_SDK_PATH")," environment variable set to the path to your pico-sdk folder.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"(optional) Set the ",(0,r.kt)("inlineCode",{parentName:"p"},"GP2040_BOARDCONFIG")," environment variable to the folder name for your board configuration."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"Pico")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a build directory, configure the build, and execute the build."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},'mkdir build\ncd build\ncmake -G "NMake Makefiles" ..\nnmake\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Your UF2 file should be in the build directory.")))),(0,r.kt)(y,{value:"Linux",label:"Linux",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Start in the GP2040-CE folder"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ensure you have the ",(0,r.kt)("inlineCode",{parentName:"p"},"PICO_SDK_PATH")," environment variable set to the path to your pico-sdk folder.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"(optional) Set the ",(0,r.kt)("inlineCode",{parentName:"p"},"GP2040_BOARDCONFIG")," environment variable to the folder name for your board configuration."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Default value is ",(0,r.kt)("inlineCode",{parentName:"li"},"Pico")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a build directory, configure the build, and execute the build."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir build\ncd build\ncmake ..\nmake\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Your UF2 file should be in the build directory."))))),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"We're looking to move away from compile time configuration, in favor of runtime configuration.")),(0,r.kt)("p",null,"There are two simple options for building GP2040-CE for your board. You can either edit an existing board definition, or create your own. Several example configurations are located in the repository ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://github.com/OpenStickCommunity/GP2040-CE/tree/main/configs"},"configs"))," folder. This document will outline setting up a new build configuration."),(0,r.kt)("h3",{id:"board-configuration-folder"},"Board Configuration Folder"),(0,r.kt)("p",null,"Each subfolder in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenStickCommunity/GP2040-CE/tree/main/configs"},(0,r.kt)("inlineCode",{parentName:"a"},"configs"))," contains a separate board configuration, which consists of the following:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Required?"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"BoardConfig.h")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"The configuration file used when building GP2040-CE for a specific controller/board. Contains initial pin mappings, LED configuration, etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"README.md")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Provides information related to this board configuration. Not required for the build process, but suggested for pull requests of new board configurations.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"assets/")),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Folder for containing assets included in the ",(0,r.kt)("inlineCode",{parentName:"td"},"README.md"),". Not required for the build process.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'\\<boardname.h",">","'"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Board definition file, named after the board itself, used by the Pico SDK for configuring board specific SDK features. ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/raspberrypi/pico-sdk/blob/master/src/boards/include/boards/pico.h"},"Pico Example"))))),(0,r.kt)("h3",{id:"board-configuration-boardconfigh"},"Board Configuration (",(0,r.kt)("inlineCode",{parentName:"h3"},"BoardConfig.h"),")"),(0,r.kt)("p",null,"The following board options are available in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PIN",(0,r.kt)("em",{parentName:"strong"},"DPAD"),(0,r.kt)("em",{parentName:"strong"},"X")),(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"PIN",(0,r.kt)("em",{parentName:"strong"},"BUTTON"),(0,r.kt)("em",{parentName:"strong"},"X"))),(0,r.kt)("td",{parentName:"tr",align:null},"The GPIO pin for the button. Replace the ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"X"))," with GP2040-CE button or D-pad direction."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"DEFAULT_SOCD_MODE")),(0,r.kt)("td",{parentName:"tr",align:null},"The default SOCD mode to use, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"SOCD_MODE_NEUTRAL"),".",(0,r.kt)("br",null),"Available options are:",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"SOCD_MODE_NEUTRAL"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"SOCD_MODE_UP_PRIORITY"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"SOCD_MODE_SECOND_INPUT_PRIORITY")),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"BUTTON_LAYOUT")),(0,r.kt)("td",{parentName:"tr",align:null},"The layout of controls/buttons for use with per-button LEDs and external displays.",(0,r.kt)("br",null),"Available options are:",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"BUTTON_LAYOUT_STICKLESS"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"BUTTON_LAYOUT_WASD")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,r.kt)("p",null,"Create ",(0,r.kt)("inlineCode",{parentName:"p"},"configs/NewBoard/BoardConfig.h")," and add your pin configuration and options. An example ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// BoardConfig.h\n\n#include <GamepadEnums.h>\n\n#define PIN_DPAD_UP     2\n#define PIN_DPAD_DOWN   3\n#define PIN_DPAD_LEFT   4\n#define PIN_DPAD_RIGHT  5\n#define PIN_BUTTON_B1   6\n#define PIN_BUTTON_B2   7\n#define PIN_BUTTON_B3   8\n#define PIN_BUTTON_B4   9\n#define PIN_BUTTON_L1   10\n#define PIN_BUTTON_R1   11\n#define PIN_BUTTON_L2   26\n#define PIN_BUTTON_R2   27\n#define PIN_BUTTON_S1   16\n#define PIN_BUTTON_S2   17\n#define PIN_BUTTON_L3   18\n#define PIN_BUTTON_R3   19\n#define PIN_BUTTON_A1   20\n#define PIN_BUTTON_A2   21\n#define PIN_BUTTON_TURBO -1\n#define PIN_SLIDER_LS    -1\n#define PIN_SLIDER_RS    -1\n\n#define DEFAULT_SOCD_MODE SOCD_MODE_NEUTRAL\n#define BUTTON_LAYOUT BUTTON_LAYOUT_ARCADE\n")),(0,r.kt)("h4",{id:"rgb-leds"},"RGB LEDs"),(0,r.kt)("p",null,"GP2040-CE supports per-button WS2812 and similar RGB LEDs."),(0,r.kt)("p",null,"The following RGB LED options are available in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"BUTTON_LAYOUT")),(0,r.kt)("td",{parentName:"tr",align:null},"The layout of controls/buttons for use with per-button LEDs and external displays.",(0,r.kt)("br",null),"Available options are:",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"BUTTON_LAYOUT_STICKLESS"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"BUTTON_LAYOUT_WASD")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"BOARD_LEDS_PIN")),(0,r.kt)("td",{parentName:"tr",align:null},"Data PIN for your LED strand"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LED_FORMAT")),(0,r.kt)("td",{parentName:"tr",align:null},"The color data format for the LED chain.",(0,r.kt)("br",null),"Available options are:",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"LED_FORMAT_GRB"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"LED_FORMAT_RGB"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"LED_FORMAT_GRBW"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"LED_FORMAT_RGBW")),(0,r.kt)("td",{parentName:"tr",align:null},"No, default value ",(0,r.kt)("inlineCode",{parentName:"td"},"LED_FORMAT_GRB"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS_PER_PIXEL")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of LEDs per button."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LED_BRIGHTNESS_MAXIMUM")),(0,r.kt)("td",{parentName:"tr",align:null},"Max brightness value, ",(0,r.kt)("inlineCode",{parentName:"td"},"uint8_t")," 0-255."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LED_BRIGHTNESS_STEPS")),(0,r.kt)("td",{parentName:"tr",align:null},"The number of brightness steps when using the up/down hotkey."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS",(0,r.kt)("em",{parentName:"strong"},"DPAD"),(0,r.kt)("em",{parentName:"strong"},"X")),(0,r.kt)("br",null),(0,r.kt)("strong",{parentName:"td"},"LEDS",(0,r.kt)("em",{parentName:"strong"},"BUTTON"),(0,r.kt)("em",{parentName:"strong"},"X"))),(0,r.kt)("td",{parentName:"tr",align:null},"The index of the button on the LED chain. Replace the ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"X"))," with GP2040-CE button or D-pad direction."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS_BASE_ANIMATION_INDEX")),(0,r.kt)("td",{parentName:"tr",align:null},"The default LED animation index."),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS_STATIC_COLOR_INDEX")),(0,r.kt)("td",{parentName:"tr",align:null},"The default color index for the static color theme"),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS_BUTTON_COLOR_INDEX")),(0,r.kt)("td",{parentName:"tr",align:null},"The default color index for the pressed button color"),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS_THEME_INDEX")),(0,r.kt)("td",{parentName:"tr",align:null},"The default theme index for static themes"),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS_RAINBOW_CYCLE_TIME")),(0,r.kt)("td",{parentName:"tr",align:null},"The color cycle time for rainbow cycle theme"),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"40"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"LEDS_CHASE_CYCLE_TIME")),(0,r.kt)("td",{parentName:"tr",align:null},"The animation speed for the rainbow chase theme"),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"85"))))),(0,r.kt)("p",null,"An example RGB LED setup in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// BoardConfig.h\n\n#include "gp2040.h"\n#include "NeoPico.hpp"\n\n#define BUTTON_LAYOUT BUTTON_LAYOUT_STICKLESS\n\n#define BOARD_LEDS_PIN 22\n\n#define LED_BRIGHTNESS_MAXIMUM 100\n#define LED_BRIGHTNESS_STEPS 5\n#define LED_FORMAT LED_FORMAT_GRB\n#define LEDS_PER_PIXEL 2\n\n#define LEDS_DPAD_LEFT   0\n#define LEDS_DPAD_DOWN   1\n#define LEDS_DPAD_RIGHT  2\n#define LEDS_DPAD_UP     3\n#define LEDS_BUTTON_B3   4\n#define LEDS_BUTTON_B4   5\n#define LEDS_BUTTON_R1   6\n#define LEDS_BUTTON_L1   7\n#define LEDS_BUTTON_B1   8\n#define LEDS_BUTTON_B2   9\n#define LEDS_BUTTON_R2   10\n#define LEDS_BUTTON_L2   11\n')),(0,r.kt)("h4",{id:"player-leds"},"Player LEDs"),(0,r.kt)("p",null,"GP2040-CE supports PWM and RGB player LEDs (PLEDs) and can be configured in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"RGB PLEDs require ",(0,r.kt)("a",{parentName:"p",href:"#rgb-leds"},"RGB LEDs")," to be configured.")),(0,r.kt)("p",null,"The following PLED options are available in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PLED_TYPE")),(0,r.kt)("td",{parentName:"tr",align:null},"Configures the type of PLEDs.",(0,r.kt)("br",null),"Available options are: ",(0,r.kt)("inlineCode",{parentName:"td"},"PLED_TYPE_PWM"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"PLED_TYPE_RGB")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PLED1_PIN")),(0,r.kt)("td",{parentName:"tr",align:null},"(PWM) The GPIO pin for PLED #1.",(0,r.kt)("br",null),"(RGB) The index of PLED #1 on the LED chain."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PLED2_PIN")),(0,r.kt)("td",{parentName:"tr",align:null},"(PWM) The GPIO pin for PLED #2.",(0,r.kt)("br",null),"(RGB) The index of PLED #2 on the LED chain."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PLED3_PIN")),(0,r.kt)("td",{parentName:"tr",align:null},"(PWM) The GPIO pin for PLED #3.",(0,r.kt)("br",null),"(RGB) The index of PLED #3 on the LED chain."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"PLED4_PIN")),(0,r.kt)("td",{parentName:"tr",align:null},"(PWM) The GPIO pin for PLED #4.",(0,r.kt)("br",null),"(RGB) The index of PLED #4 on the LED chain."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,r.kt)("p",null,"An example PLED setup in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// BoardConfig.h\n\n#include "PlayerLEDs.h"\n\n#define PLED_TYPE PLED_TYPE_RGB\n#define PLED1_PIN 12\n#define PLED2_PIN 13\n#define PLED3_PIN 14\n#define PLED4_PIN 15\n')),(0,r.kt)("h4",{id:"i2c-displays"},"I2C Displays"),(0,r.kt)("p",null,"GP2040-CE supports 128x64 monochrome displays that run on the SSD1306, SH1106 or SH1107 drivers. The following options are available for displays:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"BUTTON_LAYOUT")),(0,r.kt)("td",{parentName:"tr",align:null},"The layout of controls/buttons for use with per-button LEDs and external displays.",(0,r.kt)("br",null),"Available options are:",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"BUTTON_LAYOUT_STICKLESS"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"BUTTON_LAYOUT_WASD")),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"HAS_I2C_DISPLAY")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag to indicate the controller contains an I2C display module."),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"DISPLAY_I2C_ADDR")),(0,r.kt)("td",{parentName:"tr",align:null},"The I2C address of the display."),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0x3C"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"I2C_SDA_PIN")),(0,r.kt)("td",{parentName:"tr",align:null},"The GPIO pin for the I2C SDA line."),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"HAS_I2C_DISPLAY")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"I2C_SCL_PIN")),(0,r.kt)("td",{parentName:"tr",align:null},"The GPIO pin for the I2C SCL line."),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"HAS_I2C_DISPLAY")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"I2C_BLOCK")),(0,r.kt)("td",{parentName:"tr",align:null},"The I2C block on the Pico. Refer to the ",(0,r.kt)("a",{parentName:"td",href:"https://datasheets.raspberrypi.com/pico/Pico-R3-A4-Pinout.pdf"},"Pico Pinout Diagram")," to identify which block is in use based on the SDA and SCL pins being used.",(0,r.kt)("br",null),"Available options are:",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"i2c0"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"i2c1")),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"i2c0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"I2C_SPEED")),(0,r.kt)("td",{parentName:"tr",align:null},"The speed of the I2C bus. ",(0,r.kt)("inlineCode",{parentName:"td"},"100000")," is standard mode, while ",(0,r.kt)("inlineCode",{parentName:"td"},"400000")," is used for fast mode communication. Higher values may be used but will require testing the device for support."),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"400000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"DISPLAY_FLIP")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag to flip the rendered display output. Set to ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," to enable."),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"DISPLAY_INVERT")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag to invert the rendered display output. Set to ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," to enable."),(0,r.kt)("td",{parentName:"tr",align:null},"No, defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"0"))))),(0,r.kt)("p",null,"An example I2C display setup in the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define BUTTON_LAYOUT BUTTON_LAYOUT_WASD\n#define HAS_I2C_DISPLAY 1\n#define I2C_SDA_PIN 0\n#define I2C_SCL_PIN 1\n#define I2C_BLOCK i2c0\n#define I2C_SPEED 800000\n")),(0,r.kt)("h4",{id:"i2c-display-splash"},"I2C Display Splash"),(0,r.kt)("p",null,"The firmware also has a splash display feature. The default splash image has been defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"headers/addons/i2cdisplay.h"),". The data for the splash image are bytes representing the bitmap to be displayed on the OLED screen. The splash image can be set via the web-config. If you would like to change the default version of the splash image (to preserve it beyond data wipe), it can be customized with a C define named ",(0,r.kt)("inlineCode",{parentName:"p"},"DEFAULT_SPLASH")," in the active ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," file.\nThe instructions on how to generate those bytes are as follows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Navigate to Bitmap Converter web utility"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://marlinfw.org/tools/u8glib/converter.html"},"https://marlinfw.org/tools/u8glib/converter.html")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Configure generated code"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Select Marlin 2.x and Bitmap, untick all the rest."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Upload the splash image file"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Set the image file after clicking on "Choose file". The image file needs to be preprocessed to your liking and cropped to 128x64.  This should populate a code block below.'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Use the generated code"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Copy the hex numbers inside the curly braces from the code block.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Navigate to the ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h")," of your choice and at the end of the file right before ",(0,r.kt)("inlineCode",{parentName:"p"},"#endif"),". Create a C define like so:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define DEFAULT_SPLASH \\\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Then paste what you copied below what you just typed. Be sure to edit the array of bytes as follows:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\ // First line\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\ // Second line\n... // All lines below previous ones end in \\ similar to those above\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 // Last line doesn't have an \\ to escape the new line\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Here's a sample entry from Pico ",(0,r.kt)("inlineCode",{parentName:"p"},"BoardConfig.h"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#define DEFAULT_SPLASH \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x80,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xDF,0xC0, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0xC1,0xFF,0xA0, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xCF,0xFE,0x80, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xE0,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xAB,0xC0,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2C,0x00,0x00,0xFB,0x83,0xFF,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x01,0xFF,0x00,0x01,0xF3,0x07,0xFC,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x07,0xFF,0x00,0x03,0xE0,0x3F,0xF4,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x2C,0x38,0x0A,0xE7,0x80,0x03,0xC0,0x5F,0x80,0x00, \\\n0x00,0x00,0x00,0x20,0x07,0x81,0xFF,0x39,0xC3,0xC7,0x01,0xD7,0x80,0x3F,0x00,0x00, \\\n0x00,0x00,0x00,0xE0,0x1F,0xE7,0xFF,0x79,0xC7,0x87,0x9F,0xA7,0x80,0x6E,0x3C,0x00, \\\n0x00,0x00,0xA0,0xC0,0x3F,0xEA,0xE7,0xF3,0xEF,0x07,0x7F,0xC7,0x01,0xCF,0xFF,0x80, \\\n0x00,0x03,0x8F,0xFC,0x7F,0xC3,0xC7,0x7F,0xFE,0x0F,0x7E,0x8F,0x87,0xDF,0xFC,0x00, \\\n0x00,0x0F,0xFF,0xFF,0x73,0xC7,0x87,0xFF,0xDE,0x0E,0x50,0x07,0x1F,0x1F,0xD0,0x00, \\\n0x00,0x1F,0x57,0xFF,0xE7,0x8F,0x07,0xFF,0x1C,0x3E,0x00,0x0F,0xFF,0x7F,0x00,0x00, \\\n0x00,0x7E,0x0B,0x8F,0x8F,0x8E,0x0F,0xFF,0x9E,0x7C,0x00,0x07,0xFD,0xFC,0x00,0x00, \\\n0x00,0x7C,0x37,0x9F,0x1F,0x1E,0x0F,0x87,0x1E,0xF8,0x00,0x07,0xF0,0x30,0x00,0x00, \\\n0x00,0xF1,0xF7,0xFE,0x1E,0x1C,0x3E,0x0E,0x1F,0xF0,0x00,0x01,0x40,0x28,0x00,0x00, \\\n0x01,0xEF,0xE7,0xF8,0x3C,0x3E,0x7C,0x0F,0x1F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x03,0xFF,0x8F,0xF0,0x7F,0xFE,0xF8,0x0E,0x0F,0x80,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x03,0xFF,0xCF,0xC0,0xFF,0xFF,0xF0,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x07,0x8B,0xFF,0x01,0xFF,0x8F,0xC0,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x07,0x87,0xFE,0x01,0xFE,0x0F,0x80,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x07,0x1F,0xDE,0x03,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x07,0xBF,0x9E,0x01,0xC0,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x07,0xFF,0x9C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x07,0xFB,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x03,0xE7,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x01,0x47,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x0E,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, \\\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Test and verify"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Compile, if you did everything right, it should compile fine"),(0,r.kt)("li",{parentName:"ul"},"Load the UF2 after the compile. Check and verify in the web-config, if you have set a custom image before, you might need to reset data.")))))}L.isMDXComponent=!0}}]);